// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubsidiosClientes.Data;

#nullable disable

namespace SubsidiosClientes.Migrations
{
    [DbContext(typeof(SubsidiosContext))]
    [Migration("20231106192751_CambioStringFechaCuota")]
    partial class CambioStringFechaCuota
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("SubsidiosClientes.Data.Entities.Cuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("AmortizacionCapital")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CantidadDias")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FechaVencimiento")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Interes")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("InteresControlTNA")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NroCuota")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("SaldoFinalCapital")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SaldoInicialCapital")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ValorCuota")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cuotas");
                });

            modelBuilder.Entity("SubsidiosClientes.Data.Entities.InteresPorMes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdLineaDeCredito")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("InteresMensual")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Mes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdCuota")
                        .IsUnique();

                    b.HasIndex("IdLineaDeCredito");

                    b.ToTable("InteresPorMes");
                });

            modelBuilder.Entity("SubsidiosClientes.Data.Entities.LineaDeCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Anio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPrestamo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdPrestamo");

                    b.ToTable("LineasDeCredito");
                });

            modelBuilder.Entity("SubsidiosClientes.Data.Entities.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CantidadCuotas")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Cuota")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaComunicacionBNA")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MontoCredito")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("NroPrestamo")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TEM")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TNA")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("SubsidiosClientes.Data.Entities.InteresPorMes", b =>
                {
                    b.HasOne("SubsidiosClientes.Data.Entities.Cuota", "Cuota")
                        .WithOne("InteresPorMes")
                        .HasForeignKey("SubsidiosClientes.Data.Entities.InteresPorMes", "IdCuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SubsidiosClientes.Data.Entities.LineaDeCredito", "LineaDeCredito")
                        .WithMany("InteresesPorMes")
                        .HasForeignKey("IdLineaDeCredito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuota");

                    b.Navigation("LineaDeCredito");
                });

            modelBuilder.Entity("SubsidiosClientes.Data.Entities.LineaDeCredito", b =>
                {
                    b.HasOne("SubsidiosClientes.Data.Entities.Prestamo", "Prestamo")
                        .WithMany("LineasDeCredito")
                        .HasForeignKey("IdPrestamo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("SubsidiosClientes.Data.Entities.Cuota", b =>
                {
                    b.Navigation("InteresPorMes")
                        .IsRequired();
                });

            modelBuilder.Entity("SubsidiosClientes.Data.Entities.LineaDeCredito", b =>
                {
                    b.Navigation("InteresesPorMes");
                });

            modelBuilder.Entity("SubsidiosClientes.Data.Entities.Prestamo", b =>
                {
                    b.Navigation("LineasDeCredito");
                });
#pragma warning restore 612, 618
        }
    }
}
